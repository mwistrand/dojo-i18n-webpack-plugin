var loadCldrData = require('dojo-i18n/cldr/load');
var i18n = require('dojo-i18n/i18n');
var Promise = require('dojo-shim/Promise');
var Globalize = require('globalize');

const supplementalCldrData = ${supplementalCldrData};
const localeCldrData = ${localeCldrData};

Globalize.load(supplementalCldrData);
Globalize.load(localeCldrData);
Globalize.locale(${rootLocale} || i18n.systemLocale);

module.exports = function (locales) {
	if (Array.isArray(locales)) {
		var toLoad = [];
		var loaded = {};
		locales.forEach(function (locale) {
			var data = localeCldrData[locale];

			if (data) {
				loaded[locale] = data;
			}
			else {
				toLoad.push(locale);
			}
		});

		if (toLoad.length) {
			return loadCldrData(toLoad).then(function (data) {
				return locales.reduce(function (result, locale) {
					var cldrData = loaded[locale] || data[toLoad.indexOf(locale)];
					result[locales.indexOf(locale)] = cldrData;
					return result;
				}, []);
			});
		}
	}
	else {
		var fallback = arguments[1];
		var data = localeCldrData[locale] || localeCldrData[fallback];
		return data ? Promise.default.resolve([ data ]) : loadCldrData(locales, fallback);
	}
};
